<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.5.0</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>dev.brunopeck</groupId>
    <artifactId>star-wars</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>star-wars-app</name>
    <description>Demo project for a Spring Boot Backend serving the frontend and working as a Rest API</description>
    <properties>
        <java.version>1.8</java.version>

        <node.version>v14.0.0</node.version>
        <yarn.version>v1.16.0</yarn.version>
        <frontend-maven-plugin.version>1.6</frontend-maven-plugin.version>
        <root-config-src-dir>${project.basedir}/src/main/webapp/root-config</root-config-src-dir>
        <navbar-src-dir>${project.basedir}/src/main/webapp/navbar</navbar-src-dir>
        <planets-src-dir>${project.basedir}/src/main/webapp/planets</planets-src-dir>
    </properties>
    <dependencies>
<!--        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-oauth2-resource-server</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-webflux</artifactId>
        </dependency>
        <dependency>
            <groupId>com.github.eirslett</groupId>
            <artifactId>frontend-maven-plugin</artifactId>
            <version>1.6</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-test</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>com.github.eirslett</groupId>
                <artifactId>frontend-maven-plugin</artifactId>
                <version>${frontend-maven-plugin.version}</version>
                <executions>
                    <execution>
                        <id>install-frontend-tools</id>
                        <goals>
                            <goal>install-node-and-yarn</goal>
                        </goals>
                        <configuration>
                            <nodeVersion>${node.version}</nodeVersion>
                            <yarnVersion>${yarn.version}</yarnVersion>
                            <workingDirectory>${root-config-src-dir}</workingDirectory>
                            <installDirectory>${project.build.directory}</installDirectory>
                        </configuration>
                    </execution>

                    <execution>
                        <id>yarn-install-for-root-config</id>
                        <goals>
                            <goal>yarn</goal>
                        </goals>
                        <configuration>
                            <arguments>install</arguments>
                            <workingDirectory>${root-config-src-dir}</workingDirectory>
                            <installDirectory>${project.build.directory}</installDirectory>
                        </configuration>
                    </execution>

                    <execution>
                        <id>build-root-config</id>
                        <goals>
                            <goal>yarn</goal>
                        </goals>
                        <phase>prepare-package</phase>
                        <configuration>
                            <arguments>build</arguments>
                            <workingDirectory>${root-config-src-dir}</workingDirectory>
                            <installDirectory>${project.build.directory}</installDirectory>
                        </configuration>
                    </execution>


                    <execution>
                        <id>install-frontend-tools-for-navbar</id>
                        <goals>
                            <goal>install-node-and-yarn</goal>
                        </goals>

                        <configuration>
                            <nodeVersion>${node.version}</nodeVersion>
                            <yarnVersion>${yarn.version}</yarnVersion>
                            <workingDirectory>${navbar-src-dir}</workingDirectory>
                            <installDirectory>${project.build.directory}</installDirectory>
                        </configuration>
                    </execution>

                    <execution>
                        <id>yarn-install-for-navbar</id>
                        <goals>
                            <goal>yarn</goal>
                        </goals>
                        <configuration>
                            <arguments>install</arguments>
                            <workingDirectory>${navbar-src-dir}</workingDirectory>
                            <installDirectory>${project.build.directory}</installDirectory>
                        </configuration>
                    </execution>

                    <execution>
                        <id>build-frontend-for-navbar</id>
                        <goals>
                            <goal>yarn</goal>
                        </goals>
                        <phase>prepare-package</phase>
                        <configuration>
                            <arguments>build</arguments>
                            <workingDirectory>${navbar-src-dir}</workingDirectory>
                            <installDirectory>${project.build.directory}</installDirectory>
                        </configuration>
                    </execution>

                    <execution>
                        <id>install-frontend-tools-for-planets</id>
                        <goals>
                            <goal>install-node-and-yarn</goal>
                        </goals>

                        <configuration>
                            <nodeVersion>${node.version}</nodeVersion>
                            <yarnVersion>${yarn.version}</yarnVersion>
                            <workingDirectory>${planets-src-dir}</workingDirectory>
                            <installDirectory>${project.build.directory}</installDirectory>
                        </configuration>
                    </execution>

                    <execution>
                        <id>yarn-install-for-planets</id>
                        <goals>
                            <goal>yarn</goal>
                        </goals>
                        <configuration>
                            <arguments>install</arguments>
                            <workingDirectory>${planets-src-dir}</workingDirectory>
                            <installDirectory>${project.build.directory}</installDirectory>
                        </configuration>
                    </execution>

                    <execution>
                        <id>build-frontend-for-planets</id>
                        <goals>
                            <goal>yarn</goal>
                        </goals>
                        <phase>prepare-package</phase>
                        <configuration>
                            <arguments>build</arguments>
                            <workingDirectory>${planets-src-dir}</workingDirectory>
                            <installDirectory>${project.build.directory}</installDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <version>3.0.1</version>
                <executions>
                    <execution>
                        <id>build-root-config</id>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <phase>prepare-package</phase>
                        <configuration>
                            <outputDirectory>${project.build.outputDirectory}/public</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${root-config-src-dir}/dist</directory>
                                    <filtering>false</filtering>
                                </resource>
                            </resources>
                        </configuration>

                    </execution>
                    <execution>
                        <id>build-navbar</id>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <phase>prepare-package</phase>
                        <configuration>
                            <outputDirectory>${project.build.outputDirectory}/public/navbar</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${navbar-src-dir}/dist</directory>
                                    <filtering>false</filtering>
                                </resource>
                            </resources>
                        </configuration>

                    </execution>
                    <execution>
                        <id>build-planets</id>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <phase>prepare-package</phase>
                        <configuration>
                            <outputDirectory>${project.build.outputDirectory}/public/planets</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${planets-src-dir}/dist</directory>
                                    <filtering>false</filtering>
                                </resource>
                            </resources>
                        </configuration>

                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>
